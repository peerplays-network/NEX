stages:
  - build_base
  - test

variables:
  CYPRESS_BROWSER_TAG: node16.14.0-chrome99-ff97
  CYPRESS_IMAGE: cypress/browsers:${CYPRESS_BROWSER_TAG}

build_base_cypress:
  stage: build_base
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  variables:
  script:
    - PACKAGES_SHA1=$(cat package-lock.json package.json | sha1sum | awk '{print $1}')
    - BASE_IMAGE=$CYPRESS_IMAGE
    - FINAL_TAG=cypress-${CYPRESS_BROWSER_TAG}-packages-${PACKAGES_SHA1}

    - echo $PACKAGES_SHA1
    - echo $FINAL_TAG

    - REGISTRY_FINAL_IMAGE=$CI_REGISTRY_IMAGE:$FINAL_TAG
    - echo $REGISTRY_FINAL_IMAGE

    - echo "REGISTRY_FINAL_IMAGE=${REGISTRY_FINAL_IMAGE}" > passdown.env
    - cat passdown.env

    #
    # In the future, instead of pulling base image, just check if it's there, if
    # it is, dont pull and build and push. Requires use of gitlab api calls.
    #
    # - docker info
    - docker pull $REGISTRY_FINAL_IMAGE || true
    - docker build -f Dockerfile.base --build-arg BASE_IMAGE=$BASE_IMAGE --cache-from $REGISTRY_FINAL_IMAGE -t $REGISTRY_FINAL_IMAGE .
    - docker push $REGISTRY_FINAL_IMAGE
    - pwd
    - ls -alF

  artifacts:
    reports:
      dotenv: passdown.env


.copy_app_files:
  needs:
    - build_base_cypress
  before_script:
    - echo "${REGISTRY_FINAL_IMAGE}"
    - ORIGIN_BUILD=$(pwd)
    - pwd
    - ls -alF
    - cd /app
    - ls -alF
    - cd "$ORIGIN_BUILD"
    - pwd
    - cp -av . /app/
    - cd /app
    - ls -alF

cypress_chrome:
  stage: test
  extends: .copy_app_files
  image: ${REGISTRY_FINAL_IMAGE}
  needs:
    - build_base_cypress
  script:  
    - ./node_modules/.bin/cypress run --browser chrome

cypress_firefox:
  stage: test
  extends: .copy_app_files
  image: ${REGISTRY_FINAL_IMAGE}
  needs:
    - build_base_cypress
  script:  
    - ./node_modules/.bin/cypress run --browser firefox

eslint:
  stage: test
  extends: .copy_app_files
  image: ${REGISTRY_FINAL_IMAGE}
  needs:
    - build_base_cypress
  script:  
    - ./node_modules/.bin/eslint .

npm_audit:
  stage: test
  # does not need to copy app files over
  image: ${REGISTRY_FINAL_IMAGE}
  needs:
    - build_base_cypress
  script:  
    - npm audit .

