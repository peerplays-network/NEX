# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

stages:
- build
- test
- sonarcloud
- deployQA

build_qa:
  # node docker image on which this would be run
  image: node:16.17.0-alpine3.16
  stage: build
  script:
    - apk update && apk add g++ make nasm git libtool autoconf automake libpng-dev pkgconfig
    - echo "DEFAULT_TOKEN='$DEV_TOKEN'" >> .env
    - echo "DEFAULT_QUOTE='$DEV_QUOTE'" >> .env
    - echo "FAUCET_URL='$DEV_FAUCET'" >> .env
    - echo "DEX_URL='$DEV_DEX_URL'" >> .env
    - echo "DEFAULT_CHAIN_ID='$DEV_CHAIN_ID'" >> .env
    - echo "BLOCKCHAIN_ENDPOINTS='$DEV_BLOCKCHAIN_ENDPOINTS'" >> .env
    - npm install
    - npm run build
    - pwd #testing for artifact upload
  artifacts:
    reports:
      dast: gl-dast-report.json
    paths:
      - dist/
    expire_in: 2 weeks
  only:
    - branches
  tags:
    - sonar-check

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

sonarcloud-check:
  stage: sonarcloud
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - dev
    - gitlab-ci-updates-sonar
  tags:
    - sonar-check

deployToQA:
  stage: deployQA
  dependencies:
    - build_qa
  script: 
    - rm -rf $DEV_DEPLOY_DIR/*
    - cp -R dist/* $DEV_DEPLOY_DIR
  when: manual 

